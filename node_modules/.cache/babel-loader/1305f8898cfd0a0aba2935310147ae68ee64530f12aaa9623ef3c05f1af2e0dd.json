{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adam2\\\\OneDrive\\\\my-task-manager\\\\src\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\n// TaskList.tsx\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  onDelete,\n  onToggle\n}) => {\n  _s();\n  useEffect(() => {\n    fetch('http://localhost:3001/Alltasks').then(response => response.json());\n    for (let i = 0; i < response.length; i++) {\n      const newTask = {\n        id: response[i].id,\n        title: response[i].title,\n        completed: response[i].completed\n      };\n      setTasks([...tasks, newTask]);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: task.completed,\n        onChange: () => onToggle(task.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          textDecoration: task.completed ? 'line-through' : 'none'\n        },\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(task.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","TaskList","tasks","onDelete","onToggle","_s","fetch","then","response","json","i","length","newTask","id","title","completed","setTasks","children","map","task","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","textDecoration","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adam2/OneDrive/my-task-manager/src/TaskList.tsx"],"sourcesContent":["// TaskList.tsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport Task from './Task.ts';\r\n\r\n\r\ninterface TaskListProps {\r\n    tasks: Task[];\r\n    onDelete: (id: number) => void;\r\n    onToggle: (id: number) => void;\r\n}\r\n\r\nconst TaskList: React.FC<TaskListProps> = ({ tasks, onDelete, onToggle }) => {\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/Alltasks')\r\n            .then(response => response.json())\r\n        for (let i = 0; i < response.length; i++) {\r\n            const newTask: Task = {\r\n                id: response[i].id,\r\n                title: response[i].title,\r\n                completed: response[i].completed,\r\n            };\r\n            setTasks([...tasks, newTask]);\r\n        }\r\n    }, []);\r\n    return (\r\n        <ul>\r\n            {tasks.map(task => (\r\n                <li key={task.id}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={task.completed}\r\n                        onChange={() => onToggle(task.id)}\r\n                    />\r\n                    <span style={{ textDecoration: task.completed ? 'line-through' : 'none' }}>\r\n                        {task.title}\r\n                    </span>\r\n                    <button onClick={() => onDelete(task.id)}>Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TaskList;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAkB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUnD,MAAMC,QAAiC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAGzEP,SAAS,CAAC,MAAM;IACZQ,KAAK,CAAC,gCAAgC,CAAC,CAClCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IACtC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,MAAME,OAAa,GAAG;QAClBC,EAAE,EAAEL,QAAQ,CAACE,CAAC,CAAC,CAACG,EAAE;QAClBC,KAAK,EAAEN,QAAQ,CAACE,CAAC,CAAC,CAACI,KAAK;QACxBC,SAAS,EAAEP,QAAQ,CAACE,CAAC,CAAC,CAACK;MAC3B,CAAC;MACDC,QAAQ,CAAC,CAAC,GAAGd,KAAK,EAAEU,OAAO,CAAC,CAAC;IACjC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,oBACIZ,OAAA;IAAAiB,QAAA,EACKf,KAAK,CAACgB,GAAG,CAACC,IAAI,iBACXnB,OAAA;MAAAiB,QAAA,gBACIjB,OAAA;QACIoB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEF,IAAI,CAACJ,SAAU;QACxBO,QAAQ,EAAEA,CAAA,KAAMlB,QAAQ,CAACe,IAAI,CAACN,EAAE;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACF1B,OAAA;QAAM2B,KAAK,EAAE;UAAEC,cAAc,EAAET,IAAI,CAACJ,SAAS,GAAG,cAAc,GAAG;QAAO,CAAE;QAAAE,QAAA,EACrEE,IAAI,CAACL;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACP1B,OAAA;QAAQ6B,OAAO,EAAEA,CAAA,KAAM1B,QAAQ,CAACgB,IAAI,CAACN,EAAE,CAAE;QAAAI,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GATpDP,IAAI,CAACN,EAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUZ,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb,CAAC;AAACrB,EAAA,CAhCIJ,QAAiC;AAAA6B,EAAA,GAAjC7B,QAAiC;AAkCvC,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}