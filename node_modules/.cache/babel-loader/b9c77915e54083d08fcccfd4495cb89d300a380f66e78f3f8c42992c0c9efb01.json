{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adam2\\\\OneDrive\\\\my-task-manager\\\\src\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\n// TaskList.tsx\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  onDelete,\n  onToggle\n}) => {\n  _s();\n  useEffect(() => {\n    fetch('http://localhost:3001/Alltasks').then(response => response.json()).then(response => {\n      for (let i = 0; i < response.length; i++) {\n        const newTask = {\n          id: response[i].id,\n          title: response[i].title,\n          completed: response[i].completed\n        };\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: task.completed,\n        onChange: () => onToggle(task.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          textDecoration: task.completed ? 'line-through' : 'none'\n        },\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(task.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","TaskList","tasks","onDelete","onToggle","_s","fetch","then","response","json","i","length","newTask","id","title","completed","children","map","task","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","textDecoration","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adam2/OneDrive/my-task-manager/src/TaskList.tsx"],"sourcesContent":["// TaskList.tsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport Task from './Task.ts';\r\n\r\n\r\ninterface TaskListProps {\r\n    tasks: Task[];\r\n    onDelete: (id: number) => void;\r\n    onToggle: (id: number) => void;\r\n}\r\n\r\nconst TaskList: React.FC<TaskListProps> = ({ tasks, onDelete, onToggle }) => {\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/Alltasks')\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                for (let i = 0; i < response.length; i++) {\r\n                    const newTask: Task = {\r\n                        id: response[i].id,\r\n                        title: response[i].title,\r\n                        completed: response[i].completed,\r\n                    };\r\n                }\r\n            });\r\n    }, []);\r\n    return (\r\n        <ul>\r\n            {tasks.map(task => (\r\n                <li key={task.id}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={task.completed}\r\n                        onChange={() => onToggle(task.id)}\r\n                    />\r\n                    <span style={{ textDecoration: task.completed ? 'line-through' : 'none' }}>\r\n                        {task.title}\r\n                    </span>\r\n                    <button onClick={() => onDelete(task.id)}>Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TaskList;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAkB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUnD,MAAMC,QAAiC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAGzEP,SAAS,CAAC,MAAM;IACZQ,KAAK,CAAC,gCAAgC,CAAC,CAClCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACC,QAAQ,IAAI;MACd,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;QACtC,MAAME,OAAa,GAAG;UAClBC,EAAE,EAAEL,QAAQ,CAACE,CAAC,CAAC,CAACG,EAAE;UAClBC,KAAK,EAAEN,QAAQ,CAACE,CAAC,CAAC,CAACI,KAAK;UACxBC,SAAS,EAAEP,QAAQ,CAACE,CAAC,CAAC,CAACK;QAC3B,CAAC;MACL;IACJ,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EACN,oBACIf,OAAA;IAAAgB,QAAA,EACKd,KAAK,CAACe,GAAG,CAACC,IAAI,iBACXlB,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QACImB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEF,IAAI,CAACH,SAAU;QACxBM,QAAQ,EAAEA,CAAA,KAAMjB,QAAQ,CAACc,IAAI,CAACL,EAAE;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACFzB,OAAA;QAAM0B,KAAK,EAAE;UAAEC,cAAc,EAAET,IAAI,CAACH,SAAS,GAAG,cAAc,GAAG;QAAO,CAAE;QAAAC,QAAA,EACrEE,IAAI,CAACJ;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACPzB,OAAA;QAAQ4B,OAAO,EAAEA,CAAA,KAAMzB,QAAQ,CAACe,IAAI,CAACL,EAAE,CAAE;QAAAG,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GATpDP,IAAI,CAACL,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUZ,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb,CAAC;AAACpB,EAAA,CAjCIJ,QAAiC;AAAA4B,EAAA,GAAjC5B,QAAiC;AAmCvC,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}