{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adam2\\\\OneDrive\\\\my-task-manager\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\n// App.tsx\nimport React, { useState, useEffect } from 'react';\nimport TaskList from './TaskList.tsx';\nimport TaskForm from './TaskForm.tsx';\nimport { fetchTasks, DeleteTask, UpdateTask } from './api.ts'; // Import fetchTasks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetchTasks().then(fetchedTasks => {\n      setTasks(fetchedTasks);\n    });\n  }, []);\n  const DeleteTaskApi = id => {\n    //console.log(\"delete task \" + id);\n    DeleteTask(id);\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const ToggleTaskApi = async id => {\n    const taskToToggle = tasks.find(task => task.id === id);\n    if (taskToToggle) {\n      const updatedTask = {\n        ...taskToToggle,\n        completed: !taskToToggle.completed\n      };\n      await UpdateTask(id, updatedTask.completed);\n      setTasks(tasks.map(task => task.id === id ? updatedTask : task));\n    }\n  };\n  const addTask = (title, Deadline) => {\n    const newTask = {\n      id: Date.now(),\n      title,\n      completed: false,\n      Deadline\n    };\n    fetch('http://localhost:3001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: newTask.id,\n        title: newTask.title,\n        completed: newTask.completed,\n        Deadline: newTask.Deadline\n      })\n    });\n    setTasks([...tasks, newTask]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onDelete: DeleteTaskApi,\n      onToggle: ToggleTaskApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskList","TaskForm","fetchTasks","DeleteTask","UpdateTask","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","then","fetchedTasks","DeleteTaskApi","id","filter","task","ToggleTaskApi","taskToToggle","find","updatedTask","completed","map","addTask","title","Deadline","newTask","Date","now","fetch","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","onDelete","onToggle","_c","$RefreshReg$"],"sources":["C:/Users/adam2/OneDrive/my-task-manager/src/App.tsx"],"sourcesContent":["// App.tsx\nimport React, { useState, useEffect } from 'react';\nimport TaskList from './TaskList.tsx';\nimport TaskForm from './TaskForm.tsx';\nimport Task from './Task.ts';\nimport { fetchTasks, DeleteTask, UpdateTask } from './api.ts'; // Import fetchTasks\n\nconst App: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n\n  useEffect(() => {\n    fetchTasks().then(fetchedTasks => {\n      setTasks(fetchedTasks);\n    });\n  }, []);\n\n  const DeleteTaskApi = (id: number) => {\n    //console.log(\"delete task \" + id);\n    DeleteTask(id)\n    setTasks(tasks.filter(task => task.id !== id));\n\n  };\n\n  const ToggleTaskApi = async (id: number) => {\n    const taskToToggle = tasks.find(task => task.id === id);\n    if (taskToToggle) {\n      const updatedTask = { ...taskToToggle, completed: !taskToToggle.completed };\n      await UpdateTask(id, updatedTask.completed);\n      setTasks(tasks.map(task => task.id === id ? updatedTask : task));\n    }\n  };\n\n  const addTask = (title: string, Deadline: String) => {\n    const newTask: Task = {\n      id: Date.now(),\n      title,\n      completed: false,\n      Deadline,\n    };\n    fetch('http://localhost:3001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ id: newTask.id, title: newTask.title, completed: newTask.completed, Deadline: newTask.Deadline })\n    });\n    setTasks([...tasks, newTask]);\n  };\n\n  return (\n    <div>\n      <h1>Task Manager</h1>\n      <TaskForm onAdd={addTask} />\n      <TaskList tasks={tasks} onDelete={DeleteTaskApi} onToggle={ToggleTaskApi} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}