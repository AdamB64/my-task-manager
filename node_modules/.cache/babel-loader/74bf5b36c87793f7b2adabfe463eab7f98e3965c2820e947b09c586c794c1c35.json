{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adam2\\\\OneDrive\\\\my-task-manager\\\\src\\\\TaskForm.tsx\",\n  _s = $RefreshSig$();\n// TaskForm.tsx\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onAdd\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [deadline, setDeadline] = useState('');\n  const handleAdd = () => {\n    if (title.trim() !== '') {\n      onAdd(title, deadline);\n      setTitle('');\n      setDeadline('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      placeholder: \"Title\",\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: deadline,\n      placeholder: \"Deadline\",\n      onChange: e => setDeadline(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"8x4rb7PMlXN1r02ZSfUVD0SA4IE=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskForm","onAdd","_s","title","setTitle","deadline","setDeadline","handleAdd","trim","children","type","value","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adam2/OneDrive/my-task-manager/src/TaskForm.tsx"],"sourcesContent":["// TaskForm.tsx\r\nimport React, { useState } from 'react';\r\n\r\ninterface TaskFormProps {\r\n    onAdd: (title: string, deadline: string) => void;\r\n}\r\n\r\nconst TaskForm: React.FC<TaskFormProps> = ({ onAdd }) => {\r\n    const [title, setTitle] = useState('');\r\n    const [deadline, setDeadline] = useState('');\r\n\r\n    const handleAdd = () => {\r\n        if (title.trim() !== '') {\r\n            onAdd(title, deadline);\r\n            setTitle('');\r\n            setDeadline('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" value={title} placeholder='Title' onChange={(e) => setTitle(e.target.value)} />\r\n            <input type=\"date\" value={deadline} placeholder=\"Deadline\" onChange={(e) => setDeadline(e.target.value)} />\r\n            <button onClick={handleAdd}>Add Task</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskForm;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxC,MAAMC,QAAiC,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACpB,IAAIJ,KAAK,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACrBP,KAAK,CAACE,KAAK,EAAEE,QAAQ,CAAC;MACtBD,QAAQ,CAAC,EAAE,CAAC;MACZE,WAAW,CAAC,EAAE,CAAC;IACnB;EACJ,CAAC;EAED,oBACIP,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAOW,IAAI,EAAC,MAAM;MAACC,KAAK,EAAER,KAAM;MAACS,WAAW,EAAC,OAAO;MAACC,QAAQ,EAAGC,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACJ,KAAK;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClGpB,OAAA;MAAOW,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEN,QAAS;MAACO,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAGC,CAAC,IAAKR,WAAW,CAACQ,CAAC,CAACC,MAAM,CAACJ,KAAK;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3GpB,OAAA;MAAQqB,OAAO,EAAEb,SAAU;MAAAE,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEd,CAAC;AAACjB,EAAA,CAnBIF,QAAiC;AAAAqB,EAAA,GAAjCrB,QAAiC;AAqBvC,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}